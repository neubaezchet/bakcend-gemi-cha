"""
Sincronizaci√≥n autom√°tica Excel ‚Üí PostgreSQL + Verificaci√≥n de Drive
Ejecuta cada 1 MINUTO (Excel) y cada 5 MINUTOS (Drive token)
"""

from apscheduler.schedulers.background import BackgroundScheduler
from app.sync_excel import sincronizar_excel_completo
import datetime

def verificar_drive_token():
    """Verifica el estado del token de Drive cada 5 minutos"""
    try:
        from app.drive_uploader import get_authenticated_service
        
        print(f"[{datetime.datetime.now().strftime('%H:%M:%S')}] üîç Verificando token de Drive...")
        service = get_authenticated_service()
        
        # Si llegamos aqu√≠, el token est√° OK
        print(f"[{datetime.datetime.now().strftime('%H:%M:%S')}] ‚úÖ Token de Drive verificado")
    except Exception as e:
        print(f"[{datetime.datetime.now().strftime('%H:%M:%S')}] ‚ö†Ô∏è Error verificando token: {e}")

def iniciar_sincronizacion_automatica():
    """
    Inicia scheduler de sincronizaci√≥n autom√°tica
    ‚è±Ô∏è Excel: Ejecuta cada 1 MINUTO
    ‚è±Ô∏è Drive: Verifica cada 5 MINUTOS
    """
    
    scheduler = BackgroundScheduler()
    
    # ‚úÖ Sincronizaci√≥n de Excel (cada 60 segundos)
    scheduler.add_job(
        sincronizar_excel_completo,
        'interval',
        seconds=60,
        id='sync_excel_to_postgresql',
        name='Sincronizaci√≥n Excel ‚Üí PostgreSQL',
        replace_existing=True
    )
    
    # ‚úÖ Verificaci√≥n de Drive token (cada 5 minutos)
    scheduler.add_job(
        verificar_drive_token,
        'interval',
        minutes=5,
        id='verificar_drive_token',
        name='Verificaci√≥n de Token de Google Drive',
        replace_existing=True
    )
    
    scheduler.start()
    
    print("üîÑ Sincronizaci√≥n autom√°tica activada:")
    print("   ‚Ä¢ Excel ‚Üí PostgreSQL: cada 1 minuto")
    print("   ‚Ä¢ Token de Drive: cada 5 minutos")
    
    # Ejecutar sync inicial inmediatamente
    sincronizar_excel_completo()
    verificar_drive_token()
    
    return scheduler